CREATE TABLE users (
  user_id SERIAL,
  userName VARCHAR(100) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(100) NOT NULL,
  registerDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (user_id)
);

CREATE TABLE dolars (
    dolar_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP PRIMARY KEY,
    price_blue FLOAT NOT NULL,
    price_official FLOAT NOT NULL,
    price_mep FLOAT NOT NULL
);

CREATE TABLE markets(
    market_ticker VARCHAR(10) PRIMARY KEY
);
CREATE TABLE tickers(
    ticker_id SERIAL,
    ticker_name VARCHAR(100) NOT NULL,
    ticker_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    price_usd FLOAT NOT NULL,
    price_ars FLOAT NOT NULL,
    market_ticker VARCHAR(10),
    FOREIGN KEY (market_ticker) REFERENCES markets (market_ticker)
        ON UPDATE CASCADE
        on DELETE RESTRICT,
    PRIMARY KEY (ticker_id)
);



CREATE TYPE type_order AS ENUM ('buy', 'sell');
CREATE TABLE buy_orders(
    id_buy_order SERIAL PRIMARY KEY,
    buy_order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    paid_ars FLOAT,
    paid_usd FLOAT,
    amount INTEGER NOT NULL,
    operation_type type_order NOT NULL,
    user_id INTEGER,
    dolar_date TIMESTAMP,
    market_ticker VARCHAR(10),
    FOREIGN KEY (user_id) REFERENCES users (user_id)
        ON UPDATE CASCADE
        on DELETE RESTRICT,
    FOREIGN KEY (dolar_date) REFERENCES dolars (dolar_date)
        ON UPDATE CASCADE
        on DELETE RESTRICT,
    FOREIGN KEY (market_ticker) REFERENCES markets (market_ticker)
        ON UPDATE CASCADE
        on DELETE RESTRICT
);

CREATE TABLE order_has_tickers(
    id_buy_order INTEGER,
    ticker_id INTEGER,
    FOREIGN KEY (id_buy_order) REFERENCES buy_orders (id_buy_order)
        ON UPDATE CASCADE
        on DELETE RESTRICT,
    FOREIGN KEY (ticker_id) REFERENCES tickers (ticker_id)
        ON UPDATE CASCADE
        on DELETE RESTRICT,
    PRIMARY KEY (id_buy_order, ticker_id)
);

CREATE TABLE profit_transaction(
    id_profit_transaction SERIAL PRIMARY KEY,
    profit_ars FLOAT,
    profit_dolar FLOAT,
    dollar_date TIMESTAMP,
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES users (user_id)
        ON UPDATE CASCADE
        on DELETE RESTRICT,
    FOREIGN KEY (dollar_date) REFERENCES dolars (dolar_date)
        ON UPDATE CASCADE
        on DELETE RESTRICT
);

CREATE TABLE order_generate_profit(
    id_buy_order INTEGER,
    id_profit_transaction INTEGER,
    FOREIGN KEY (id_buy_order) REFERENCES buy_orders (id_buy_order)
        ON UPDATE CASCADE
        on DELETE RESTRICT,
    FOREIGN KEY (id_profit_transaction) REFERENCES profit_transaction (id_profit_transaction)
        ON UPDATE CASCADE
        on DELETE RESTRICT,
    PRIMARY KEY (id_buy_order, id_profit_transaction)
);


